{"remainingRequest":"E:\\丫丫\\web\\CODE\\blog\\sifou\\node_modules\\thread-loader\\dist\\cjs.js!E:\\丫丫\\web\\CODE\\blog\\sifou\\node_modules\\babel-loader\\lib\\index.js!E:\\丫丫\\web\\CODE\\blog\\sifou\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\丫丫\\web\\CODE\\blog\\sifou\\src\\service\\AuthorService.js","dependencies":[{"path":"E:\\丫丫\\web\\CODE\\blog\\sifou\\src\\service\\AuthorService.js","mtime":1612237665720},{"path":"E:\\丫丫\\web\\CODE\\blog\\sifou\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\丫丫\\web\\CODE\\blog\\sifou\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\丫丫\\web\\CODE\\blog\\sifou\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\丫丫\\web\\CODE\\blog\\sifou\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["E:/丫丫/web/CODE/blog/sifou/src/service/AuthorService.js"],"names":["axios","defaultConfig","AuthorService","userData","post","baseApiUrl","get","params","data"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,+BAAlB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;;IAEMC,a;;;;;;;AAEJ;;mGACmBC,Q;;;;;iDACVH,KAAK,CAACI,IAAN,WAAcH,aAAa,CAACI,UAA5B,mCAAqEF,QAArE,C;;;;;;;;;;;;;;;QAGR;;;;;iGACgBA,Q;;;;;kDACRH,KAAK,CAACI,IAAN,WAAcH,aAAa,CAACI,UAA5B,gCAAkEF,QAAlE,C;;;;;;;;;;;;;;;QAGT;;;;;;;;;;kDAESH,KAAK,CAACM,GAAN,WAAaL,aAAa,CAACI,UAA3B,qC;;;;;;;;;;;;;;;QAGR;;;;;sGACqBF,Q;;;;;kDACbH,KAAK,CAACI,IAAN,WAAcH,aAAa,CAACI,UAA5B,qCAAuEF,QAAvE,C;;;;;;;;;;;;;;;QAGT;;;;;;;;;;kDAESH,KAAK,CAACM,GAAN,WAAaL,aAAa,CAACI,UAA3B,iC;;;;;;;;;;;;;;;QAGT;;;;;6GAC4BE,M;;;;;kDACnBP,KAAK,CAACM,GAAN,WAAaL,aAAa,CAACI,UAA3B,yCAA0E;AAACE,kBAAAA,MAAM,EAANA;AAAD,iBAA1E,C;;;;;;;;;;;;;;;QAIT;;;;;kGACiBA,M;;;;;kDACRP,KAAK,CAACM,GAAN,WAAaL,aAAa,CAACI,UAA3B,iCAAkE;AAACE,kBAAAA,MAAM,EAANA;AAAD,iBAAlE,C;;;;;;;;;;;;;;;QAGT;;;;;oGACmBC,I;;;;;kDACVR,KAAK,CAACI,IAAN,WAAcH,aAAa,CAACI,UAA5B,mCAAqEG,IAArE,C;;;;;;;;;;;;;;;QAGR;;;;;kGACiBA,I;;;;;kDACTR,KAAK,CAACI,IAAN,WAAcH,aAAa,CAACI,UAA5B,iCAAmEG,IAAnE,C;;;;;;;;;;;;;;;QAGR;;;;;iGACeA,I;;;;;mDACPR,KAAK,CAACI,IAAN,WAAcH,aAAa,CAACI,UAA5B,+BAAiEG,IAAjE,C;;;;;;;;;;;;;;;QAGP;;;;;oGACkBA,I;;;;;mDACTR,KAAK,CAACI,IAAN,WAAcH,aAAa,CAACI,UAA5B,kCAAoEG,IAApE,C;;;;;;;;;;;;;;;QAGT;;;;;;;;;;mDAESR,KAAK,CAACM,GAAN,WAAaL,aAAa,CAACI,UAA3B,yC;;;;;;;;;;;;;;;QAGT;;;;;;;;;;mDAESL,KAAK,CAACM,GAAN,WAAaL,aAAa,CAACI,UAA3B,iC;;;;;;;;;;;;;;;;;;;;;AAIb,eAAe,IAAIH,aAAJ,EAAf","sourcesContent":["import axios from './config/axios.default.config'\r\nimport defaultConfig from '@/config/config.default'\r\n\r\nclass AuthorService{\r\n\r\n  //用户注册\r\n  async registerUser(userData){\r\n    return axios.post(`${defaultConfig.baseApiUrl}/authentication/registerUser`,userData)\r\n  }\r\n\r\n   //用户登录\r\n   async loginUser(userData){\r\n    return axios.post(`${defaultConfig.baseApiUrl}/authentication/loginUser`,userData)\r\n  }\r\n\r\n  //用户令牌验证\r\n  async checkPermission(){\r\n    return axios.get(`${defaultConfig.baseApiUrl}/authentication/checkPermission`)\r\n  }\r\n\r\n   //用户更新信息\r\n   async updateUserInfo(userData){\r\n    return axios.post(`${defaultConfig.baseApiUrl}/authentication/updateUserInfo`,userData)\r\n  }\r\n\r\n  //获取用户信息\r\n  async getUserInfo(){\r\n    return axios.get(`${defaultConfig.baseApiUrl}/authentication/getUserInfo`)\r\n  }\r\n\r\n  //获取未审核的用户\r\n  async getUnapprovedUserList(params){\r\n    return axios.get(`${defaultConfig.baseApiUrl}/authentication/getUnapprovedUsers`,{params})\r\n  }\r\n\r\n  \r\n  //获取所有用户\r\n  async getAllUser(params){\r\n    return axios.get(`${defaultConfig.baseApiUrl}/authentication/getAllUser`,{params})\r\n  }\r\n\r\n  //审核通过用户注册申请\r\n  async approvedUser(data){\r\n    return axios.post(`${defaultConfig.baseApiUrl}/authentication/approvedUser`,data)\r\n  }\r\n\r\n   //不通过用户注册申请\r\n   async deleteUser(data){\r\n    return axios.post(`${defaultConfig.baseApiUrl}/authentication/deleteUser`,data)\r\n  }\r\n\r\n   //设置/取消管理员权限\r\n   async setAdmin(data){\r\n    return axios.post(`${defaultConfig.baseApiUrl}/authentication/setAdmin`,data)\r\n  }\r\n\r\n    //是否冻结账号\r\n    async setApproved(data){\r\n      return axios.post(`${defaultConfig.baseApiUrl}/authentication/setApproved`,data)\r\n    }\r\n\r\n    //获取用户注册信息\r\n    async getUserRegisterInfo(){\r\n      return axios.get(`${defaultConfig.baseApiUrl}/authentication/getUserRegisterInfo`)\r\n    }\r\n\r\n    //获取文章发布数据\r\n    async getBlogInfo(){\r\n      return axios.get(`${defaultConfig.baseApiUrl}/authentication/getBlogInfo`)\r\n    }\r\n}\r\n\r\nexport default new AuthorService()"]}]}