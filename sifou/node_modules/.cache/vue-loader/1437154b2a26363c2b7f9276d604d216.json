{"remainingRequest":"E:\\丫丫\\web\\CODE\\blog\\sifou\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\丫丫\\web\\CODE\\blog\\sifou\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\丫丫\\web\\CODE\\blog\\sifou\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\丫丫\\web\\CODE\\blog\\sifou\\src\\pages\\user\\views\\ArticleDetail.vue?vue&type=template&id=0cf17626&scoped=true&","dependencies":[{"path":"E:\\丫丫\\web\\CODE\\blog\\sifou\\src\\pages\\user\\views\\ArticleDetail.vue","mtime":1610952893764},{"path":"E:\\丫丫\\web\\CODE\\blog\\sifou\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\丫丫\\web\\CODE\\blog\\sifou\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\丫丫\\web\\CODE\\blog\\sifou\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\丫丫\\web\\CODE\\blog\\sifou\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}