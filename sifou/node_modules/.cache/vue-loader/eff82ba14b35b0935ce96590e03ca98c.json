{"remainingRequest":"E:\\丫丫\\web\\CODE\\blog\\sifou\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\丫丫\\web\\CODE\\blog\\sifou\\src\\pages\\user\\views\\ChatHome.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\丫丫\\web\\CODE\\blog\\sifou\\src\\pages\\user\\views\\ChatHome.vue","mtime":1610954820428},{"path":"E:\\丫丫\\web\\CODE\\blog\\sifou\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\丫丫\\web\\CODE\\blog\\sifou\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\丫丫\\web\\CODE\\blog\\sifou\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\丫丫\\web\\CODE\\blog\\sifou\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmFzeW5jIGZ1bmN0aW9uIGN1dEltYWdlQmFzZTY0KGZpbGVzLCB3aWR0aCwgcXVhbGl0eSl7CiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXMgPT4gewogICAgY29uc3QgZmlsZSA9IGZpbGVzWzBdCiAgICBsZXQgVVJMID0gd2luZG93LlVSTCB8fCBXaW5kb3cud2Via2l0VVJMCiAgICBsZXQgYmxvYiA9IFVSTC5jcmVhdGVPYmplY3RVUkwoZmlsZSkgLy/ojrflj5blvZPliY3mlofku7bnmoTkuIDkuKrlhoXlrZhVUkwKICAgIGxldCBiYXNlNjQKICAgIGNvbnN0IGltZyA9IG5ldyBJbWFnZSgpCiAgICBpbWcuc3JjID0gYmxvYgogICAgaW1nLm9ubG9hZCA9IGZ1bmN0aW9uKCl7CiAgICAgIGxldCB3ID0gdGhpcy53aWR0aAogICAgICBsZXQgaCA9IHRoaXMuaGVpZ2h0CiAgICAgIGxldCBzY2FsZSA9IHcgLyBoCiAgICAgIHcgPSB3aWR0aCB8fCB3CiAgICAgIGggPSB3IC8gc2NhbGUKICAgICAgY29uc3QgY2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJykKICAgICAgY29uc3QgY2FuQ29uID0gY2FudmFzLmdldENvbnRleHQoJzJkJykKICAgICAgY2FudmFzLndpZHRoID0gdyAKICAgICAgY2FudmFzLmhlaWdodCA9IGgKICAgICAgY2FuQ29uLmRyYXdJbWFnZSh0aGlzLCAwLCAwLCB3LCBoKQogICAgICBsZXQgZXh0ID0gdGhpcy5zcmMuc3Vic3RyaW5nKHRoaXMuc3JjLmxhc3RJbmRleE9mKCIuIikgKyAxKS50b0xvd2VyQ2FzZSgpOwogICAgICBiYXNlNjQgPSBjYW52YXMudG9EYXRhVVJMKCdpbWFnZS8nK2V4dCwgcXVhbGl0eSB8fCAwLjgpCiAgICAgIHJlcyhiYXNlNjQpCiAgICB9CiAgfSkpCgp9CmltcG9ydCBkZWZhdWx0Q29uZmlnIGZyb20gJ0AvY29uZmlnL2NvbmZpZy5kZWZhdWx0JwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogImNoYXRIb21lIiwKICBkYXRhKCl7CiAgICByZXR1cm4gewogICAgICBzb2NrZXQ6bnVsbCwKICAgICAgbXNnVGV4dDonJywKICAgICAgbWVzc2FnZTp7CiAgICAgICAgdXNlck5hbWU6JycsCiAgICAgICAgYXZhdGFyOicnLAogICAgICAgIG1zZzp7CiAgICAgICAgICB0eXBlOicnLAogICAgICAgICAgY29udGVudDonICcKICAgICAgICB9CiAgICAgIH0sCiAgICAgIHVzZXJEYXRhOkpTT04ucGFyc2Uoc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgndXNlckRhdGEnKSksCiAgICAgIG1zZ0xpc3Q6W10KICAgIH0KICB9LAogIHdhdGNoOnsKICAgIHVzZXJEYXRhOnsKICAgICAgaGFuZGxlcigpewogICAgICAgIHRoaXMubWVzc2FnZS51c2VyTmFtZSA9IHRoaXMudXNlckRhdGEudXNlck5hbWUKICAgICAgICB0aGlzLm1lc3NhZ2UuYXZhdGFyID0gdGhpcy51c2VyRGF0YS5hdmF0YXIKICAgICAgfSwKICAgICAgaW1tZWRpYXRlOnRydWUKICAgIH0KICB9LAogIG1vdW50ZWQoKXsKICAgIHRoaXMuc29ja2V0ID0gbmV3IFdlYlNvY2tldChgJHtkZWZhdWx0Q29uZmlnLndzc0FwaVVybH1gKQogICAgbGV0IHZtID0gdGhpcwoKICAgIC8v5oiQ5Yqf6L+e5o6l6IGK5aSp5a6kCiAgICB0aGlzLnNvY2tldC5hZGRFdmVudExpc3RlbmVyKCdvcGVuJyxmdW5jdGlvbigpewogICAgICB2bS4kbWVzc2FnZS5zdWNjZXNzKCfliqDlhaXogYrlpKnlrqQnKQogICAgfSkKCiAgICAvL+aOpeaUtuS/oeaBrwogICAgdGhpcy5zb2NrZXQuYWRkRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsZnVuY3Rpb24oZXZlbnQpewogICAgICB2bS5tc2dMaXN0LnB1c2goewogICAgICAgIC4uLkpTT04ucGFyc2UoZXZlbnQuZGF0YSksCiAgICAgICAgdHlwZTonb3RoZXInCiAgICAgIH0pCiAgICAgIHZtLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgdm0uJHJlZnMuY29udGVudEFyZWEuc2Nyb2xsVG9wID0gdm0uJHJlZnMuY29udGVudEFyZWEuc2Nyb2xsSGVpZ2h0CiAgICAgIH0pCiAgICB9KQogIH0sCiAgbWV0aG9kczp7CiAgICBnb0JhY2soKXsKICAgICAgdGhpcy4kcm91dGVyLmdvKC0xKQogICAgfSwKICAgIHNlbmRJbWcoKXsKICAgICAgY3V0SW1hZ2VCYXNlNjQodGhpcy4kcmVmcy5zZWxlY3RJbWcuZmlsZXMsIDQwMCwgMC42KS50aGVuKHJzID0+IHsKICAgICAgICB0aGlzLm1lc3NhZ2UubXNnLnR5cGUgPSAnaW1nJwogICAgICAgIHRoaXMubWVzc2FnZS5tc2cuY29udGVudCA9IHJzCiAgICAgICAgdGhpcy5zb2NrZXQuc2VuZChKU09OLnN0cmluZ2lmeSh0aGlzLm1lc3NhZ2UpKQogICAgICAgIHRoaXMubXNnTGlzdC5wdXNoKHsKICAgICAgICAgIC4uLkpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5tZXNzYWdlKSksCiAgICAgICAgICB0eXBlOidtZScKICAgICAgICB9KQogICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICAgIHRoaXMuJHJlZnMuY29udGVudEFyZWEuc2Nyb2xsVG9wID0gdGhpcy4kcmVmcy5jb250ZW50QXJlYS5zY3JvbGxIZWlnaHQKICAgICAgICB9KQogICAgICAgIHRoaXMubWVzc2FnZS5tc2cudHlwZSA9ICcnCiAgICAgICAgdGhpcy5tZXNzYWdlLm1zZy5jb250ZW50ID0gJyAgJwogICAgICB9KQogICAgfSwKICAgIHNlbmRUZXh0KCl7CiAgICAgIGlmKCF0aGlzLm1zZ1RleHQpewogICAgICAgIHRoaXMuJG1lc3NhZ2Uud2FybmluZygn5LiN6IO95Y+R6YCB56m65raI5oGvJykKICAgICAgICByZXR1cm4gCiAgICAgIH0KICAgICAgdGhpcy5tZXNzYWdlLm1zZy50eXBlID0gJ3RleHQnCiAgICAgIHRoaXMubWVzc2FnZS5tc2cuY29udGVudCA9IHRoaXMubXNnVGV4dAogICAgICB0aGlzLnNvY2tldC5zZW5kKEpTT04uc3RyaW5naWZ5KHRoaXMubWVzc2FnZSkpIC8v5Y+R6YCB5L+h5oGvCiAgICAgIHRoaXMubXNnVGV4dCA9ICcnCiAgICAgIHRoaXMubXNnTGlzdC5wdXNoKHsKICAgICAgICAuLi5KU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMubWVzc2FnZSkpLAogICAgICAgIHR5cGU6J21lJwogICAgICB9KQogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgdGhpcy4kcmVmcy5jb250ZW50QXJlYS5zY3JvbGxUb3AgPSB0aGlzLiRyZWZzLmNvbnRlbnRBcmVhLnNjcm9sbEhlaWdodAogICAgICB9KQogICAgICB0aGlzLm1lc3NhZ2UubXNnLnR5cGUgPSAnJwogICAgICB0aGlzLm1lc3NhZ2UubXNnLmNvbnRlbnQgPSAnICAnCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["ChatHome.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"ChatHome.vue","sourceRoot":"src/pages/user/views","sourcesContent":["<template>\r\n  <div>\r\n    <el-page-header @back=\"goBack\">\r\n    </el-page-header>\r\n    <div class=\"chat-wrapper\">\r\n      <div class=\"content-area\" ref='contentArea'>\r\n      <div class=\"msg-box\"  v-for='(item, index) in msgList' :key='index'>\r\n        <div\r\n        :style=\"{\r\n          float:item.type === 'me' ? 'right' : 'left',\r\n          padding:'10px'\r\n        }\"\r\n        >\r\n        <div \r\n        :style=\"{\r\n          float:item.type === 'me' ? 'right' : 'left'\r\n        }\">\r\n          <el-avatar :size=\"40\" :src='item.avatar' style=\"display: block;margin: 0 auto\"></el-avatar>\r\n          <span style='font-size: 12px;'>{{item.userName}}</span>\r\n        </div>\r\n        <el-card\r\n        :style=\"{\r\n          float:item.type === 'me' ? 'right' : 'left',\r\n          margin:'0 10px'\r\n        }\">\r\n          <span v-if=\"item.msg.type==='text'\">{{item.msg.content}}</span>\r\n          <el-image v-else :src=\"item.msg.content\"></el-image>\r\n        </el-card>\r\n        \r\n        </div>\r\n      </div>\r\n      </div>\r\n      <div class=\"tool-bar\">\r\n        <el-row style=\" text-align: center;box-shadow: 0 0px 10px 1px #ccc\">\r\n          <el-col :span='2' style=\"line-height: 40px; cursor: pointer;\" class=\"select-img\">\r\n            <i class=\"el-icon-picture-outline\" style=\"cursor: pointer;\"></i>\r\n            <input @change='sendImg' type=\"file\" ref='selectImg' style=\"position: absolute;z-index: 10;top: 0;left: 0;opacity: 0;\">\r\n          </el-col>\r\n          <el-col :span='20'>\r\n            <el-input v-model=\"msgText\" @keypress.enter.native='sendText'></el-input>\r\n          </el-col>\r\n          <el-col :span='2'>\r\n            <el-button type=\"text\" icon='el-icon-s-promotion' @click='sendText'></el-button>\r\n          </el-col>\r\n        </el-row>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  async function cutImageBase64(files, width, quality){\r\n    return new Promise((res => {\r\n      const file = files[0]\r\n      let URL = window.URL || Window.webkitURL\r\n      let blob = URL.createObjectURL(file) //获取当前文件的一个内存URL\r\n      let base64\r\n      const img = new Image()\r\n      img.src = blob\r\n      img.onload = function(){\r\n        let w = this.width\r\n        let h = this.height\r\n        let scale = w / h\r\n        w = width || w\r\n        h = w / scale\r\n        const canvas = document.createElement('canvas')\r\n        const canCon = canvas.getContext('2d')\r\n        canvas.width = w \r\n        canvas.height = h\r\n        canCon.drawImage(this, 0, 0, w, h)\r\n        let ext = this.src.substring(this.src.lastIndexOf(\".\") + 1).toLowerCase();\r\n        base64 = canvas.toDataURL('image/'+ext, quality || 0.8)\r\n        res(base64)\r\n      }\r\n    }))\r\n\r\n  }\r\n  import defaultConfig from '@/config/config.default'\r\n  export default {\r\n    name: \"chatHome\",\r\n    data(){\r\n      return {\r\n        socket:null,\r\n        msgText:'',\r\n        message:{\r\n          userName:'',\r\n          avatar:'',\r\n          msg:{\r\n            type:'',\r\n            content:' '\r\n          }\r\n        },\r\n        userData:JSON.parse(sessionStorage.getItem('userData')),\r\n        msgList:[]\r\n      }\r\n    },\r\n    watch:{\r\n      userData:{\r\n        handler(){\r\n          this.message.userName = this.userData.userName\r\n          this.message.avatar = this.userData.avatar\r\n        },\r\n        immediate:true\r\n      }\r\n    },\r\n    mounted(){\r\n      this.socket = new WebSocket(`${defaultConfig.wssApiUrl}`)\r\n      let vm = this\r\n\r\n      //成功连接聊天室\r\n      this.socket.addEventListener('open',function(){\r\n        vm.$message.success('加入聊天室')\r\n      })\r\n\r\n      //接收信息\r\n      this.socket.addEventListener('message',function(event){\r\n        vm.msgList.push({\r\n          ...JSON.parse(event.data),\r\n          type:'other'\r\n        })\r\n        vm.$nextTick(() => {\r\n          vm.$refs.contentArea.scrollTop = vm.$refs.contentArea.scrollHeight\r\n        })\r\n      })\r\n    },\r\n    methods:{\r\n      goBack(){\r\n        this.$router.go(-1)\r\n      },\r\n      sendImg(){\r\n        cutImageBase64(this.$refs.selectImg.files, 400, 0.6).then(rs => {\r\n          this.message.msg.type = 'img'\r\n          this.message.msg.content = rs\r\n          this.socket.send(JSON.stringify(this.message))\r\n          this.msgList.push({\r\n            ...JSON.parse(JSON.stringify(this.message)),\r\n            type:'me'\r\n          })\r\n          this.$nextTick(() => {\r\n            this.$refs.contentArea.scrollTop = this.$refs.contentArea.scrollHeight\r\n          })\r\n          this.message.msg.type = ''\r\n          this.message.msg.content = '  '\r\n        })\r\n      },\r\n      sendText(){\r\n        if(!this.msgText){\r\n          this.$message.warning('不能发送空消息')\r\n          return \r\n        }\r\n        this.message.msg.type = 'text'\r\n        this.message.msg.content = this.msgText\r\n        this.socket.send(JSON.stringify(this.message)) //发送信息\r\n        this.msgText = ''\r\n        this.msgList.push({\r\n          ...JSON.parse(JSON.stringify(this.message)),\r\n          type:'me'\r\n        })\r\n        this.$nextTick(() => {\r\n          this.$refs.contentArea.scrollTop = this.$refs.contentArea.scrollHeight\r\n        })\r\n        this.message.msg.type = ''\r\n        this.message.msg.content = '  '\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  .chat-wrapper{\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100vh - 24px);\r\n  }\r\n  .content-area{\r\n    height:calc(100% - 40px);\r\n    overflow-y: auto;\r\n  }\r\n  .tool-bar{\r\n    position:absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height:40px;\r\n    background-color: #fff;\r\n  }\r\n  .select-img:hover{\r\n    color:#409EFF\r\n  }\r\n  .msg-box::after{\r\n    content:'';\r\n    display: block;\r\n    clear:both\r\n  }\r\n  .el-card__body{\r\n    padding:10px\r\n  }\r\n</style>\r\n<!--\r\n  保持长连接\r\n    服务器上主动给用户发送信息\r\n    socket(套接字)\r\n\r\n  轮询：\r\n    每隔一段时间就向后端发送请求\r\n\r\n-->"]}]}